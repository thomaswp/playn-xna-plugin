<?xml version="1.0" encoding="UTF-8"?>
<plugin>
  <name>XNA Plugin</name>
  <description>Generates XNA project files for PlayN.</description>
  <groupId>playn.xna</groupId>
  <artifactId>xna-plugin</artifactId>
  <version>1.0</version>
  <goalPrefix>xna</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>xna</goal>
      <description></description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>playn.xna.XnaPluginMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>_project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>overwriteContent</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Tells the plugin whether to overwrite the contenet project (.contentproj) file if it already exists. 
Defaults to true.</description>
        </parameter>
        <parameter>
          <name>overwriteGame</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Tells the plugin whether to overwrite the game entry point (.cs) file if it already exists. 
Defaults to false.</description>
        </parameter>
        <parameter>
          <name>overwriteImporter</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Tells the plugin whether to overwrite the Importer.cs file if it already exists. Defaults to true.</description>
        </parameter>
        <parameter>
          <name>overwriteProject</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Tells the plugin whether to overwrite the project (.csproj) file if it already exists. Defaults to false.</description>
        </parameter>
        <parameter>
          <name>overwriteSLN</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Tells the plugin whether to overwrite the solution (.sln) file if it already exists. Defaults to false.</description>
        </parameter>
        <parameter>
          <name>qualifiedGameName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The fully qualified name of the core game that should be run,
e.g. my.package.core.MyGame</description>
        </parameter>
        <parameter>
          <name>spritefonts</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Any spritefonts the plugin should generate.
Fonts should be in the form: FontName;InstalledName;Sizes;Styles;CharacterRegions
Example: &lt;code&gt;&amp;lt;spritefont&gt;Arial;Arial;9,12,24;Plain,Bold,Italic;32-136,150-170&amp;lt;/spritefont&gt;&lt;/code&gt;</description>
        </parameter>
      </parameters>
      <configuration>
        <_project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <overwriteContent implementation="boolean" default-value="true">${xna.overwriteContent}</overwriteContent>
        <overwriteGame implementation="boolean" default-value="false">${xna.overwriteGame}</overwriteGame>
        <overwriteImporter implementation="boolean" default-value="true">${xna.overwriteImporter}</overwriteImporter>
        <overwriteProject implementation="boolean" default-value="false">${xna.overwriteProject}</overwriteProject>
        <overwriteSLN implementation="boolean" default-value="false">${xna.overwriteSln}</overwriteSLN>
        <qualifiedGameName implementation="java.lang.String">${xna.qualifiedGameName}</qualifiedGameName>
        <spritefonts implementation="java.lang.String[]">${xna.spritefonts}</spritefonts>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <type>jar</type>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <type>jar</type>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <type>jar</type>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>backport-util-concurrent</groupId>
      <artifactId>backport-util-concurrent</artifactId>
      <type>jar</type>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-registry</artifactId>
      <type>jar</type>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.11</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>1.5.15</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.0-alpha-9-stable-1</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <type>jar</type>
      <version>3.8.1</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1-alpha-2</version>
    </dependency>
  </dependencies>
</plugin>